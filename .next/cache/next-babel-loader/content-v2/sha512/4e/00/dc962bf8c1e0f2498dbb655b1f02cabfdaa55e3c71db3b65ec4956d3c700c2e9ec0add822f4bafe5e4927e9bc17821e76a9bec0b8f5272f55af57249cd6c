{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Niloo/Documents/Projects/React/NextJS-Course/Meetup-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetup.title,\n    image: props.meetup.image,\n    address: props.meetup.address,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://nilooooyi:8vg5P7zFu22IlcL5@meetup.wkrlxt6.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  db;\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = context => {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetup: {\n        title: \"First meetup\",\n        id: meetupId,\n        image: \"https://s3.amazonaws.com/crowdriff-media/full/3877fe68047bad6940df96183aeb446d176571e5b86f17ba9ca228c264f0fda4.jpg\",\n        address: \"High Park\",\n        description: \"This is a gorgeus place!\"\n      }\n    }\n  };\n};\nexport default MeetupDetailPage;","map":{"version":3,"sources":["/Users/Niloo/Documents/Projects/React/NextJS-Course/Meetup-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetailPage","props","meetup","title","image","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","fallback","paths","map","params","meetupId","toString","getStaticProps","context","id"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,KADtB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,MAAN,CAAaE,KAFtB;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,MAAN,CAAaG,OAHxB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAI,MAAMV,WAAW,CAACW,OAAZ,CAAoB,kGAApB,CAAtB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,EAAoCC,OAApC,EAAtB;AACAN,EAAAA,EAAE;AAEF,SAAO;AACLO,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYjB,MAAM,KAAK;AAACkB,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEnB,MAAM,CAACa,GAAP,CAAWO,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFF,GAAP;AAID,CAXM;AAaP,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,cADD;AAENsB,QAAAA,EAAE,EAAEJ,QAFE;AAGNjB,QAAAA,KAAK,EACH,oHAJI;AAKNC,QAAAA,OAAO,EAAE,WALH;AAMNC,QAAAA,WAAW,EAAE;AANP;AADH;AADF,GAAP;AAYD,CAdM;AAeP,eAAeN,gBAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = (props) => {\n  return (\n    <MeetupDetail\n      title={props.meetup.title}\n      image={props.meetup.image}\n      address={props.meetup.address}\n      description={props.meetup.description}\n    />\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client  = await MongoClient.connect('mongodb+srv://nilooooyi:8vg5P7zFu22IlcL5@meetup.wkrlxt6.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n  db\n  \n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}})),\n  };\n};\n\nexport const getStaticProps = (context) => {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetup: {\n        title: \"First meetup\",\n        id: meetupId,\n        image:\n          \"https://s3.amazonaws.com/crowdriff-media/full/3877fe68047bad6940df96183aeb446d176571e5b86f17ba9ca228c264f0fda4.jpg\",\n        address: \"High Park\",\n        description: \"This is a gorgeus place!\",\n      },\n    },\n  };\n};\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}