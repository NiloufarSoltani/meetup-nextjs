{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Niloo/Documents/Projects/React/NextJS-Course/Meetup-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from 'next/head';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetup.title,\n      id: props.meetup.id,\n      image: props.meetup.image,\n      address: props.meetup.address,\n      description: props.meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://nilooooyi:8vg5P7zFu22IlcL5@meetup.wkrlxt6.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://nilooooyi:8vg5P7zFu22IlcL5@meetup.wkrlxt6.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: new ObjectId(meetupId)\n  }); // console.log('selectedMeetup', selectedMeetup);\n\n  client.close();\n  return {\n    props: {\n      meetup: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n};\nexport default MeetupDetailPage;","map":{"version":3,"sources":["/Users/Niloo/Documents/Projects/React/NextJS-Course/Meetup-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Head","MeetupDetail","MeetupDetailPage","props","meetup","title","id","image","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,MAAN,CAAaC;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEF,KAAK,CAACC,MAAN,CAAaC,KADtB;AAEE,MAAA,EAAE,EAAEF,KAAK,CAACC,MAAN,CAAaE,EAFnB;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaG,KAHtB;AAIE,MAAA,OAAO,EAAEJ,KAAK,CAACC,MAAN,CAAaI,OAJxB;AAKE,MAAA,WAAW,EAAEL,KAAK,CAACC,MAAN,CAAaK;AAL5B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAeD,CAhBD;;AAkBA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAanB,MAAD,KAAa;AAC9BoB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAErB,MAAM,CAACc,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMc,cAAc,GAAG,MAAMf,gBAAgB,CAACgB,OAAjB,CAAyB;AACpDZ,IAAAA,GAAG,EAAE,IAAInB,QAAJ,CAAa0B,QAAb;AAD+C,GAAzB,CAA7B,CAT+C,CAY/C;;AACAd,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNE,QAAAA,EAAE,EAAEuB,cAAc,CAACX,GAAf,CAAmBQ,QAAnB,EADE;AAENrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFhB;AAGNE,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAHhB;AAINC,QAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAJlB;AAKNC,QAAAA,WAAW,EAAEoB,cAAc,CAACpB;AALtB;AADH;AADF,GAAP;AAWD,CA1BM;AA2BP,eAAeP,gBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport Head from 'next/head';\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = (props) => {\n  return (\n    <>\n      <Head>\n        <title>{props.meetup.title}</title>\n        <meta />\n      </Head>\n      <MeetupDetail\n        title={props.meetup.title}\n        id={props.meetup.id}\n        image={props.meetup.image}\n        address={props.meetup.address}\n        description={props.meetup.description}\n      />\n    </>\n  );\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://nilooooyi:8vg5P7zFu22IlcL5@meetup.wkrlxt6.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\n\nexport const getStaticProps = async (context) => {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://nilooooyi:8vg5P7zFu22IlcL5@meetup.wkrlxt6.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: new ObjectId(meetupId),\n  });\n  // console.log('selectedMeetup', selectedMeetup);\n  client.close();\n\n  return {\n    props: {\n      meetup: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n};\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}